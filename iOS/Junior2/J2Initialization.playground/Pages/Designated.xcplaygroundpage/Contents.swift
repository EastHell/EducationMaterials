/*:

 # Designated инициализатор

 ---

 Designated (Назначенные) инициализаторы - это основные инициализаторы объекта. Каждый объект должен иметь
 хотя бы один designated инициализатор или унаследовать его. Эти инициализаторы необходимы чтобы установить
 значения всем свойствам инициализирумого объекта и вызвать инициализатор суперкласса (если он есть), для
 продолжения цепочки инициализации.
 */
class A {
    let value: Int

    // Инициализирует все свойства объекта
    init(value: Int) {
        self.value = value
    }
}

A(value: 10)

class B: A {
    let description: String

    // Инициализирует все свойства объекта, а так-же вызывает инициализатор суперкласса для дальнейшей
    // цепочки инициализации
    init(value: Int, description: String) {
        self.description = description

        super.init(value: value)
    }

    // Еще один designated инициализатор, устанавливает все свойства объекта и вызывает инициализатор суперкласса
    init(value: String) {
        guard let value = Int(value) else {
            self.description = "Zero"

            super.init(value: .zero)

            return
        }

        self.description = value.description

        super.init(value: value)
    }
}

// Объект B не унаследовал инициализатор от суперкласса А поскольку имеет собственные непроинициализированные
// по умолчанию свойства
B(value: 10, description: "Ten")
B(value: "Test")
B(value: "10")

class C: A {
    var isUsed: Bool = false
}

// Объект С унаследовал инициализатор от суперкласса А
C(value: 10)
/*:
 - Note:
    Инициализаторы не имеют возвращаемого типа, и на самом деле ничего не возвращают. Их главная задача - убедиться
    что все свойства объекта проинициализированы перед его исопльзованием.
 ---

 [Next](@next)
 */
