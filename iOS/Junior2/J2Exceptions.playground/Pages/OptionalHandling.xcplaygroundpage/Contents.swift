/*:
 [Previous](@previous)

 [Какие есть способы обработать ошибку? Чем они отличаются?](ErrorHandling)

 ---

 ## Опциональное значение

 ---

 Еще одним способом обработки ошибок - является преобразование в опциональное значение. Для этого используется
 инструкция `try?` перед вызовом функции. В случае если функция выбросит ошибку - в результате будет `nil`, иначе
 в результате будет значение, которое вернула функция. Стоит отметить, что результат будет опциональным, даже если
 в возвращаемом значении указан не опциональный тип.
 */
enum TestError: Error {
    case exampleCase
}

func testThrowingFunction() throws -> Int {
    throw TestError.exampleCase
}

// result имеет тип Int?
let result = try? testThrowingFunction()
/*:
 ---

 [Next](@next)
 */
