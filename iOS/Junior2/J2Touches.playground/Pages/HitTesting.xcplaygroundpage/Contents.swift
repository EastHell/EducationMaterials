/*:
 [Previous](@previous)

 ---

 # Hit testing

 ---

 `UIKit` использует hit testing на основе `view`, чтобы определить где произошло событие касания. `UIKit` сравнивает
 местоположение касания с границами (`bounds`) объекта view во view иерархии. Метод `hitTest(_: with:)` класса `UIView`
 проходится по иерархии view в поисках самого глубокого subview в который попадает данное касание, это subview становится
 `first responder` данного события.

 - Note:
 Если местоположение касания оказывается снаружи границ (bounds) view, метод `hitTest(_: with:)` игнорирует данное view и все
 его subviews. В результате когда свойство `clipToBounds` у view имеет значение `false`, subview снаружи границ (bounds) этого
 view не будут возвращены, даже если касание оказалось внутрих их границ (bounds)

 Когда происходит касание `UIKit` создает объект `UITouch` и связывает его с view. Когда изменяется местоположение нажатия
 или другие параметры, `UIKit` обновляет параметры того-же `UITouch` объекта новой информацией. Единственное что остается
 неизменным - это связанная view. (Даже если местоположение касания сдвинется за пределы view, значение связанной view
 не изменится. Когда касание закончится `UIKit` освободит объект `UITouch`.

 ---

 [Next](@next)
 */
